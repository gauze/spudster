!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/darren@hiebert.com/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.0.1	//
AS	makefile	/^AS=\/usr\/local\/bin\/as6809$/;"	m
arrow_coor	spud.asm	/^arrow_coor  equ arrow_y		  ; for Object_Hit routines load into X$/;"	d
arrow_coor	spudcheck.asm	/^arrow_coor  equ arrow_y		  ; for Object_Hit routines load into X-Reg$/;"	d
arrow_x	spud.asm	/^arrow_x 	equ arrow_y+1     ; x$/;"	d
arrow_x	spud2.asm	/^arrow_x 	equ arrow_y+1     ; x$/;"	d
arrow_x	spudcheck.asm	/^arrow_x 	equ arrow_y+1     ; x$/;"	d
arrow_y	spud.asm	/^arrow_y 	equ spud_start+2  ; y$/;"	d
arrow_y	spud2.asm	/^arrow_y 	equ $C880 			;spud_start+2  ; y$/;"	d
arrow_y	spudcheck.asm	/^arrow_y 	equ live_arrow+1  ; y$/;"	d
brightdir	spud.asm	/^brightdir equ intlevel+1$/;"	d
brightdir	spudcheck.asm	/^brightdir equ intlevel+1$/;"	d
coord	spud.asm	/^coord		equ brightdir+1$/;"	d
coord	spudcheck.asm	/^coord		equ brightdir+1$/;"	d
count	spud.asm	/^count		equ minbright+1$/;"	d
current_song	spud.asm	/^current_song equ music8    ; junk.$/;"	d
current_song	spudcheck.asm	/^current_song equ musa    ; junk.$/;"	d
intlevel	spud.asm	/^intlevel equ arrow_x+1$/;"	d
intlevel	spudcheck.asm	/^intlevel equ arrow_x+1$/;"	d
joypressed	spud.asm	/^joypressed 	equ mollystate+1$/;"	d
joypressed	spudcheck.asm	/^joypressed 	equ mollystate+1$/;"	d
level	spud.asm	/^level 		equ score+7$/;"	d
level	spudcheck.asm	/^level 		equ score+6$/;"	d
live_arrow	spudcheck.asm	/^live_arrow 	equ joypressed+1$/;"	d
maxbright	spud.asm	/^maxbright	equ coord+2$/;"	d
maxbright	spudcheck.asm	/^maxbright	equ coord+2$/;"	d
minbright	spud.asm	/^minbright	equ	maxbright+1$/;"	d
mollystate	spud.asm	/^mollystate 	equ spudstate+1$/;"	d
mollystate	spudcheck.asm	/^mollystate 	equ spudstate+1$/;"	d
score	spud.asm	/^score 		equ $C880		;7 bytes as defined in BIOS routine Add_Score_?$/;"	d
score	spudcheck.asm	/^score 		equ $C881		; 6 bytes as defined in BIOS routine Add_Score_?$/;"	d
spud_coor	spud.asm	/^spud_coor  equ spud_ypos     ; for Object hit routine load into Y-reg$/;"	d
spud_coord	spudcheck.asm	/^spud_coord  equ spud_ypos     ; for Object hit routine load into Y-reg$/;"	d
spud_start	spud.asm	/^spud_start 	equ joypressed+1$/;"	d
spud_xpos	spud.asm	/^spud_xpos	equ spud_ypos+1   ; x$/;"	d
spud_xpos	spudcheck.asm	/^spud_xpos	equ spud_ypos+1   ; x$/;"	d
spud_ypos	spud.asm	/^spud_ypos 	equ spuds_left+1  ; y$/;"	d
spud_ypos	spudcheck.asm	/^spud_ypos 	equ spuds_left+1  ; y$/;"	d
spuds_left	spud.asm	/^spuds_left 	equ level+1$/;"	d
spuds_left	spudcheck.asm	/^spuds_left 	equ level+1$/;"	d
spudstate	spud.asm	/^spudstate 	equ spud_xpos+1 $/;"	d
spudstate	spudcheck.asm	/^spudstate 	equ spud_xpos+1 $/;"	d
